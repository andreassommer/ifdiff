function [obj, Fname_old] = preprocess_editFunctionHead(mtreeobj)
config = makeConfig();

% notation:
% cIndex -> column index; refers to a property type
% rIndex -> row index of some object; refers to the entire row.
cIndex = mtree_cIndex(); 
rIndex = mtree_rIndex(mtreeobj);

Fname_old = mtreeobj.C{mtreeobj.T(rIndex.HEAD.Fname, cIndex.stringTableIndex)}; 

% change functon name; add preprocess_ to the function name
mtreeobj = mtree_createAndAdd_NewNode(mtreeobj, ... 
    rIndex.HEAD.ETC2, ... 
    cIndex.indexLeftchild, ...
    {mtreeobj.K.ID, ['preprocessed_', Fname_old]}); 

% add datahandle as input variable of the function 
% required, s.th. ctrlif works within the function 
[mtreeobj, rIndex_datahandle] = mtree_createAndAdd_NewNode(mtreeobj, ... 
    rIndex.HEAD.ETC2, ... 
    cIndex.indexRightchild, ... 
    {mtreeobj.K.ID, config.datahandleArgumentName}, ...
    rIndex.HEAD.Arg(:,1), ...
    cIndex.indexNextNode); 

% add function index to distinguish the function calls from each other
% within the integration (ODE solving algorithm with switching point
% detection) 
[mtreeobj, ~] = mtree_createAndAdd_NewNode(mtreeobj, ... 
    rIndex.HEAD.ETC2, ... 
    cIndex.indexRightchild, ... 
    {mtreeobj.K.ID, 'function_index'}, ...
    rIndex_datahandle, ...
    cIndex.indexNextNode); 
    
     
mtreeobj.C{mtreeobj.T(rIndex.HEAD.Fname, cIndex.stringTableIndex)} = 'old_fcn_name';
obj = mtreeobj; 

end